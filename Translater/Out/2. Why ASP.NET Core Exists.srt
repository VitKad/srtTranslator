1
00:00:02,240 --> 00:00:07,340
Carved Rock is a non‑existent company selling outdoor equipment.

2
00:00:07,340 --> 00:00:10,340
I have created this web page for them.

3
00:00:10,340 --> 00:00:11,750
It contains the logo,

4
00:00:11,750 --> 00:00:16,180
a subtitle, and the phrase, Today's specials. The

5
00:00:16,180 --> 00:00:19,940
HTML for this page looks like this.

6
00:00:19,940 --> 00:00:23,640
Of course, you can find the elements of the page here.

7
00:00:23,640 --> 00:00:28,470
They are styled and positioned using CSS classes, they have come

8
00:00:28,470 --> 00:00:33,860
from a popular CSS library called Bootstrap. Under the header,

9
00:00:33,860 --> 00:00:38,750
Today's specials, I now want to list products and I want customers

10
00:00:38,750 --> 00:00:42,500
to click on them to see more details.

11
00:00:42,500 --> 00:00:47,080
The products for Carved Rock are in a database, so we need to build

12
00:00:47,080 --> 00:00:52,590
functionality to get the products out of the database and somehow render them

13
00:00:52,590 --> 00:00:58,240
as part of this web page. The need for this functionality marks the

14
00:00:58,240 --> 00:01:02,640
difference between a website and a web application.

15
00:01:02,640 --> 00:01:05,840
A website is for static content.

16
00:01:05,840 --> 00:01:13,650
It is made up of individual HTML and CSS files that rarely change, for example,

17
00:01:13,650 --> 00:01:17,280
the site for a sports club that contains some info where the

18
00:01:17,280 --> 00:01:20,940
club is located and how to participate.

19
00:01:20,940 --> 00:01:24,930
As soon as we introduce functionality like getting the common matches

20
00:01:24,930 --> 00:01:28,880
from an external source, or in the case of Carved Rock,

21
00:01:28,880 --> 00:01:33,290
getting the products from a database, we no longer call it a website,

22
00:01:33,290 --> 00:01:38,940
we call it a web application. To create web applications,

23
00:01:38,940 --> 00:01:44,620
a web application framework helps a lot, something that gives us the

24
00:01:44,620 --> 00:01:49,490
building blocks to create the needed functionality and to give us a

25
00:01:49,490 --> 00:01:55,060
way to write our code in a structured manner so that it is

26
00:01:55,060 --> 00:02:02,340
maintainable and extendable. ASP.NET Core is such a web application

27
00:02:02,340 --> 00:02:05,240
framework created by Microsoft.

28
00:02:05,240 --> 00:02:10,180
It gives us the means to create frontend and backend web

29
00:02:10,180 --> 00:02:14,340
applications. Maybe you're wondering now,

30
00:02:14,340 --> 00:02:18,440
do we absolutely need a web application framework?

31
00:02:18,440 --> 00:02:22,040
Well, when I want to get from A to B by car,

32
00:02:22,040 --> 00:02:26,440
I only have to know how to operate the car. I need not have the

33
00:02:26,440 --> 00:02:31,280
knowledge around how the engine works and that's great because now

34
00:02:31,280 --> 00:02:35,880
I can be focused on getting to my destination, and I don't have to

35
00:02:35,880 --> 00:02:40,940
think about the underlying technology. With a web application

36
00:02:40,940 --> 00:02:42,940
framework, in theory,

37
00:02:42,940 --> 00:02:46,420
you could reinvent the wheel and write all the building blocks

38
00:02:46,420 --> 00:02:51,920
yourself and come up with your own way to structure the code. Apart

39
00:02:51,920 --> 00:02:55,240
from the time and the expertise that will take,

40
00:02:55,240 --> 00:02:59,870
we want to invest in creating application solutions for our organization or

41
00:02:59,870 --> 00:03:05,440
customer and leave the deeper underlying technology to others.

42
00:03:05,440 --> 00:03:10,590
Also, using a commonly‑used web application framework like ASP.NET

43
00:03:10,590 --> 00:03:16,350
Core enables your organization to bring in other developers that

44
00:03:16,350 --> 00:03:21,240
already know how to work with the framework and its building blocks

45
00:03:21,240 --> 00:03:25,800
making the onboarding process a lot easier while optimizing the

46
00:03:25,800 --> 00:03:27,840
speed of development.

47
00:03:27,840 --> 00:03:32,440
It's like if you buy a car of a brand and type you never drove before,

48
00:03:32,440 --> 00:03:34,940
you already know how to drive it.

49
00:03:34,940 --> 00:03:38,720
You don't have to read the manual first because driving a car is a

50
00:03:38,720 --> 00:03:44,030
standardized practice. Hopefully you're convinced that using a web

51
00:03:44,030 --> 00:03:46,620
application framework is a good idea,

52
00:03:46,620 --> 00:03:57,000
but what kind of applications can be built exactly with ASP.NET Core. I'm answering that question next.

