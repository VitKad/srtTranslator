1
00:00:02,040 --> 00:00:08,780
Все стили интерфейсных приложений имеют одну общую черту — способ проектирования 

2
00:00:08,780 --> 00:00:14,260
пользовательского интерфейса, страниц или представлений.  Это делается 

3
00:00:14,260 --> 00:00:20,840
с помощью Razor.  Razor по сути представляет собой HTML с возможностью встраивания 

4
00:00:20,840 --> 00:00:28,980
кода C#.  Чтобы показать вам, что я имею в виду, вот файл Error.cshtml из нашего 

5
00:00:28,980 --> 00:00:34,930
примера проекта Razor Pages.  Стиль приложения TheRazor Pages, конечно же, получил 

6
00:00:34,930 --> 00:00:43,880
свое название от Razor, о котором мы говорим в этом клипе.  Расширение cshtml 

7
00:00:43,880 --> 00:00:50,570
означает C# с HTML.  Точно так же существуют файлы VBHTML, Visual Basic с 

8
00:00:50,570 --> 00:00:57,800
HTML.  Однако вскоре мы увидим, что в Blazor файлы Razor просто имеют расширение 

9
00:00:57,800 --> 00:01:05,990
razor.  На первый взгляд этот файл Error.cshtml кажется обычным HTML-файлом.  

10
00:01:05,990 --> 00:01:11,880
Но если присмотреться, можно увидеть встроенный код C#.  Например, 

11
00:01:11,880 --> 00:01:18,020
есть оператор if, который проверяет логическое свойство ShowRequestId объекта модели. 

12
00:01:18,020 --> 00:01:24,690
 Если это правда, то отображается HTML-элемент p, в котором отображается свойствоRequestId, 

13
00:01:24,690 --> 00:01:29,440
также из объекта модели. Обратите внимание, что 

14
00:01:29,440 --> 00:01:34,740
каждый раз, когда мы начинаем оператор или выражение C#, используется знак 

15
00:01:34,740 --> 00:01:40,920
at.  Если мы оставим знак at, он будет просто отображать Model.RequestId, 

16
00:01:40,920 --> 00:01:46,740
а не оценивать его как выражение. Блоки кода также возможны 

17
00:01:46,740 --> 00:01:51,970
с использованием знака at, за которым следуют фигурные скобки.  

18
00:01:51,970 --> 00:01:56,890
В таком блоке можно записать несколько строк кода, заканчивающихся 

19
00:01:56,890 --> 00:01:59,540
точкой с запятой. Я мог бы, например, 

20
00:01:59,540 --> 00:02:03,900
добавить строку, объявляющую текстовую переменную ошибки.  Я 

21
00:02:03,900 --> 00:02:11,500
ссылаюсь на это где-то в своей HTML-разметке.  ASP.NET Core гарантирует, 

22
00:02:11,500 --> 00:02:16,110
что код в файлах Razor будет обработан до того, как браузер покажет 

23
00:02:16,110 --> 00:02:19,840
его пользователю. Теперь пришло время 

24
00:02:19,840 --> 00:02:27,000
рассказать вам об особенностях различных стилей приложений. 

