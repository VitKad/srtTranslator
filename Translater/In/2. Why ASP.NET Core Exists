1
00:00:02,240 --> 00:00:07,340
Carved Rock — несуществующая компания, продающая оборудование для 

2
00:00:07,340 --> 00:00:10,340
активного отдыха. Я создал для них эту 

3
00:00:10,340 --> 00:00:11,750
веб-страницу. Она содержит 

4
00:00:11,750 --> 00:00:16,180
логотип, подзаголовок и фразу «Сегодняшние специальные 

5
00:00:16,180 --> 00:00:19,940
предложения».  HTML-код этой страницы 

6
00:00:19,940 --> 00:00:23,640
выглядит следующим образом. Конечно, вы можете найти элементы 

7
00:00:23,640 --> 00:00:28,470
страницы здесь. Они оформлены и позиционированы с использованием 

8
00:00:28,470 --> 00:00:33,860
классов CSS, они взяты из популярной библиотеки CSS под названием 

9
00:00:33,860 --> 00:00:38,750
Bootstrap.  Под заголовком «Сегодняшние специальные предложения» я 

10
00:00:38,750 --> 00:00:42,500
теперь хочу перечислить продукты и хочу, 

11
00:00:42,500 --> 00:00:47,080
чтобы покупатели нажимали на них, чтобы увидеть более подробную информацию. 

12
00:00:47,080 --> 00:00:52,590
Продукты для Carved Rock находятся в базе данных, поэтому нам нужно создать функциональность, 

13
00:00:52,590 --> 00:00:58,240
чтобы получать продукты из базы данных и каким-то образом  сделать темы 

14
00:00:58,240 --> 00:01:02,640
частью этой веб-страницы.  Необходимость этой функциональности 

15
00:01:02,640 --> 00:01:05,840
определяет разницу между веб-сайтом 

16
00:01:05,840 --> 00:01:13,650
и веб-приложением. Веб-сайт предназначен для статического контента. Он состоит из 

17
00:01:13,650 --> 00:01:17,280
отдельных файлов HTML и CSS, которые редко изменяются, например, 

18
00:01:17,280 --> 00:01:20,940
сайт спортивного клуба, содержащий некоторую 

19
00:01:20,940 --> 00:01:24,930
информацию,  находится клуб и как принять в нем участие. Как только мы 

20
00:01:24,930 --> 00:01:28,880
вводим такие функции, как получение общих совпадений из 

21
00:01:28,880 --> 00:01:33,290
внешнего источника или, в случае с Carved Rock, получение продуктов из 

22
00:01:33,290 --> 00:01:38,940
базы данных, мы больше не называем это веб-сайтом, мы называем 

23
00:01:38,940 --> 00:01:44,620
это  веб приложение.  При создании веб-приложений очень помогает инфраструктура 

24
00:01:44,620 --> 00:01:49,490
веб-приложений, которая дает нам строительные блоки для создания необходимой 

25
00:01:49,490 --> 00:01:55,060
функциональности и позволяет нам писать наш код структурированным 

26
00:01:55,060 --> 00:02:02,340
образом, чтобы его можно было поддерживать и расширять.  ASP.NET Core 

27
00:02:02,340 --> 00:02:05,240
— это такая платформа веб-приложений, 

28
00:02:05,240 --> 00:02:10,180
созданная Microsoft. Она дает нам средства для создания интерфейсных 

29
00:02:10,180 --> 00:02:14,340
и серверных веб-приложений.  Может быть, вы 

30
00:02:14,340 --> 00:02:18,440
сейчас задаетесь вопросом, нужна ли нам абсолютно необходима 

31
00:02:18,440 --> 00:02:22,040
среда веб-приложений? Что ж, когда я хочу добраться 

32
00:02:22,040 --> 00:02:26,440
из пункта А в пункт Б на машине, мне нужно только знать, как управлять 

33
00:02:26,440 --> 00:02:31,280
автомобилем.  Мне не нужно знать, как работает двигатель, и это здорово, 

34
00:02:31,280 --> 00:02:35,880
потому что теперь я могу сосредоточиться на том, чтобы добраться до 

35
00:02:35,880 --> 00:02:40,940
пункта назначения, и мне не нужно думать о базовой технологии. 

36
00:02:40,940 --> 00:02:42,940
 Теоретически, используя 

37
00:02:42,940 --> 00:02:46,420
среду веб-приложений, вы могли бы заново изобрести велосипед, написать 

38
00:02:46,420 --> 00:02:51,920
все строительные блоки самостоятельно и придумать свой собственный способ 

39
00:02:51,920 --> 00:02:55,240
структурирования кода.  Помимо времени и опыта, 

40
00:02:55,240 --> 00:02:59,870
которые потребуются, мы хотим инвестировать в создание прикладных решений для 

41
00:02:59,870 --> 00:03:05,440
нашей организации или клиента, а более глубокие базовые технологии 

42
00:03:05,440 --> 00:03:10,590
оставить другим. Кроме того, использование широко используемой среды 

43
00:03:10,590 --> 00:03:16,350
веб-приложений, такой как ASP.NETCore, позволяет вашей организации 

44
00:03:16,350 --> 00:03:21,240
 в других разработчиках, которые уже знают, как работать с фреймворком 

45
00:03:21,240 --> 00:03:25,800
и его строительными блоками, что значительно упрощает процесс адаптации 

46
00:03:25,800 --> 00:03:27,840
и одновременно оптимизирует 

47
00:03:27,840 --> 00:03:32,440
скорость разработки. Это похоже на то, если вы покупаете автомобиль марки 

48
00:03:32,440 --> 00:03:34,940
и типа, на котором никогда раньше 

49
00:03:34,940 --> 00:03:38,720
не водили, вы уже умеете водить  Это. Вам не обязательно сначала читать 

50
00:03:38,720 --> 00:03:44,030
руководство, поскольку вождение автомобиля является стандартизированной 

51
00:03:44,030 --> 00:03:46,620
практикой.  Надеюсь, вы убеждены, что 

52
00:03:46,620 --> 00:03:57,000
использование платформы веб-приложений — хорошая идея, но какие приложения можно создавать именно с помощью ASP.NET Core.  Дальше я отвечу на этот вопрос. 

